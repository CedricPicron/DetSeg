model = dict(
    type='GCT',
    requires_masks=False,
    map_cfg=dict(
        type='ResNet',
        name='resnet50',
        out_ids=[2],
    ),
    struc_cfg=dict(
        type='PosEncoder',
        net_cfg=dict(
            type='nn.Linear',
            in_features=2,
            out_features=64,
            bias=True,
        ),
    ),
    graph_cfgs=[
        dict(
            type='GraphToGraph',
            node_weight_iters=5,
            max_group_iters=100,
            con_cross_cfg=[
                dict(
                    type='GraphAttnFull',
                    in_size=256,
                    struc_size=64,
                    norm='layer',
                    act_fn='',
                    qk_size=64,
                    val_size=64,
                    num_heads=8,
                    skip=True,
                ),
            ],
            edge_score_cfg=[
                dict(
                    type='nn.Linear',
                    in_features=256,
                    out_features=64,
                    bias=True,
                ),
                dict(
                    type='TwoStepMLP',
                    num_layers=1,
                    in_size=64,
                    hidden_size=128,
                    norm1='layer',
                    norm2='',
                    act_fn1='',
                    act_fn2='relu',
                    skip=True,
                ),
                dict(
                    type='NodeToEdge',
                    reduction='mul',
                    implementation='pytorch-custom',
                ),
                dict(
                    type='nn.Linear',
                    in_features=64,
                    out_features=1,
                    bias=True,
                    init_cfg=dict(type='Constant', layer='Linear', val=0.1, bias=-3),
                ),
            ],
            con_self_cfg=[
                dict(
                    type='TwoStepMLP',
                    in_size=256,
                    hidden_size=256,
                    norm1='layer',
                    norm2='',
                    act_fn1='',
                    act_fn2='relu',
                    skip=True,
                )
            ],
            struc_self_cfg=[
                dict(
                    type='TwoStepMLP',
                    in_size=64,
                    hidden_size=128,
                    norm1='layer',
                    norm2='',
                    act_fn1='',
                    act_fn2='relu',
                    skip=True,
                )
            ],
        ),
    ],
)
